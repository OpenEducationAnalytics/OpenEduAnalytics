{
    "name": "edfi_upsert",
    "properties": {
        "folder": {
            "name": "Modules/Ed-Fi/Ingest"
        },
        "type": "MappingDataFlow",
        "typeProperties": {
            "sources": [
                {
                    "linkedService": {
                        "referenceName": "LS_DataLake",
                        "type": "LinkedServiceReference"
                    },
                    "name": "SourceJson"
                }
            ],
            "sinks": [
                {
                    "linkedService": {
                        "referenceName": "LS_DataLake",
                        "type": "LinkedServiceReference"
                    },
                    "name": "SinkDelta"
                }
            ],
            "transformations": [
                {
                    "name": "AlterRow"
                },
                {
                    "name": "DerivedColumn"
                },
                {
                    "name": "SelectColumns"
                }
            ],
            "scriptLines": [
                "parameters{",
                "     DistrictId as string (\"All\"),",
                "     SchoolYear as string (\"2021\"),",
                "     IngestedFolder as string (\"Ingested/Ed-Fi/v5.2\"),",
                "     TransactionalFolder as string (\"Transactional/Ed-Fi/v5.2/DistrictId=All/SchoolYear=2021\"),",
                "     Entity as string (\"/ed-fi/absenceEventCategoryDescriptors\")",
                "}",
                "source(useSchema: false,",
                "     allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     inferDriftedColumnTypes: true,",
                "     limit: 10000,",
                "     ignoreNoFilesFound: true,",
                "     mode: 'read',",
                "     format: 'json',",
                "     fileSystem: 'stage1',",
                "     folderPath: (\"{$TransactionalFolder}{$Entity}/Incremental/Upserts\"),",
                "     documentForm: 'documentPerLine',",
                "     preferredIntegralType: 'integer',",
                "     preferredFractionalType: 'float') ~> SourceJson",
                "SelectColumns alterRow(upsertIf(true())) ~> AlterRow",
                "SourceJson derive(SchoolYear = $SchoolYear,",
                "          DistrictId = $DistrictId,",
                "          LastModifiedDate = currentTimestamp()) ~> DerivedColumn",
                "DerivedColumn select(mapColumn(",
                "          each(match(name!='rundate'))",
                "     ),",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true) ~> SelectColumns",
                "AlterRow sink(allowSchemaDrift: true,",
                "     validateSchema: false,",
                "     format: 'delta',",
                "     fileSystem: 'stage2',",
                "     folderPath: (\"{$IngestedFolder}{$Entity}\"),",
                "     mergeSchema: (true()),",
                "     autoCompact: false,",
                "     optimizedWrite: false,",
                "     vacuum: 0,",
                "     deletable:false,",
                "     insertable:false,",
                "     updateable:false,",
                "     upsertable:true,",
                "     keys:['id','SchoolYear','DistrictId'],",
                "     umask: 0022,",
                "     preCommands: [],",
                "     postCommands: [],",
                "     skipDuplicateMapInputs: true,",
                "     skipDuplicateMapOutputs: true,",
                "     partitionBy('key',",
                "          0,",
                "          DistrictId,",
                "          SchoolYear",
                "     )) ~> SinkDelta"
            ]
        }
    }
}