{
    "name": "Setup Database from New Stages",
    "properties": {
        "activities": [
            {
                "name": "Iterate over folders",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Get Tables",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    },
                    {
                        "activity": "Create Required Schemas",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@activity('Get Tables').output.childItems",
                        "type": "Expression"
                    },
                    "isSequential": false,
                    "activities": [
                        {
                            "name": "Create View for Entity",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[dbo].[sp_executesql]",
                                "storedProcedureParameters": {
                                    "command": {
                                        "value": {
                                            "value": "CREATE OR ALTER VIEW edfi.@{item().name} AS\nSELECT * FROM OPENROWSET(\n    BULK 'https://@{pipeline().parameters.StorageAccount}.dfs.core.windows.net/stage@{pipeline().parameters.StageNum}/@{pipeline().parameters.FileSystem}/@{item().name}',\n    FORMAT='DELTA'\n    ) AS [r]",
                                            "type": "Expression"
                                        },
                                        "type": "String"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "LS_Serverless",
                                "type": "LinkedServiceReference",
                                "parameters": {
                                    "DbName": {
                                        "value": "@pipeline().parameters.DbName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    ]
                }
            },
            {
                "name": "Create Serverless Db",
                "type": "SqlServerStoredProcedure",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "storedProcedureName": "[dbo].[sp_executesql]",
                    "storedProcedureParameters": {
                        "command": {
                            "value": {
                                "value": "IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = '@{pipeline().parameters.DbName}') \nBEGIN\n  CREATE DATABASE [@{pipeline().parameters.DbName}]; \nEND\n\n",
                                "type": "Expression"
                            },
                            "type": "String"
                        }
                    }
                },
                "linkedServiceName": {
                    "referenceName": "LS_Serverless",
                    "type": "LinkedServiceReference",
                    "parameters": {
                        "DbName": {
                            "value": "master",
                            "type": "Expression"
                        }
                    }
                }
            },
            {
                "name": "Get Tables",
                "type": "GetMetadata",
                "dependsOn": [],
                "policy": {
                    "timeout": "7.00:00:00",
                    "retry": 0,
                    "retryIntervalInSeconds": 30,
                    "secureOutput": false,
                    "secureInput": false
                },
                "userProperties": [],
                "typeProperties": {
                    "dataset": {
                        "referenceName": "DS_JSON",
                        "type": "DatasetReference",
                        "parameters": {
                            "stage": {
                                "value": "@pipeline().parameters.StageNum",
                                "type": "Expression"
                            },
                            "path": {
                                "value": "@pipeline().parameters.FileSystem",
                                "type": "Expression"
                            }
                        }
                    },
                    "fieldList": [
                        "childItems"
                    ],
                    "storeSettings": {
                        "type": "AzureBlobFSReadSettings",
                        "recursive": true,
                        "enablePartitionDiscovery": false
                    },
                    "formatSettings": {
                        "type": "JsonReadSettings"
                    }
                }
            },
            {
                "name": "Create Required Schemas",
                "type": "ForEach",
                "dependsOn": [
                    {
                        "activity": "Create Serverless Db",
                        "dependencyConditions": [
                            "Succeeded"
                        ]
                    }
                ],
                "userProperties": [],
                "typeProperties": {
                    "items": {
                        "value": "@pipeline().parameters.Schemas",
                        "type": "Expression"
                    },
                    "isSequential": true,
                    "activities": [
                        {
                            "name": "Create Schema object",
                            "type": "SqlServerStoredProcedure",
                            "dependsOn": [],
                            "policy": {
                                "timeout": "7.00:00:00",
                                "retry": 0,
                                "retryIntervalInSeconds": 30,
                                "secureOutput": false,
                                "secureInput": false
                            },
                            "userProperties": [],
                            "typeProperties": {
                                "storedProcedureName": "[dbo].[sp_executesql]",
                                "storedProcedureParameters": {
                                    "command": {
                                        "value": {
                                            "value": "IF NOT EXISTS ( SELECT  * FROM    sys.schemas WHERE   name = N'@{item()}' )\nBEGIN\n    EXECUTE sp_executesql N'CREATE SCHEMA @{item()}'\nEND",
                                            "type": "Expression"
                                        },
                                        "type": "String"
                                    }
                                }
                            },
                            "linkedServiceName": {
                                "referenceName": "LS_Serverless",
                                "type": "LinkedServiceReference",
                                "parameters": {
                                    "DbName": {
                                        "value": "@pipeline().parameters.DbName",
                                        "type": "Expression"
                                    }
                                }
                            }
                        }
                    ]
                }
            }
        ],
        "parameters": {
            "StorageAccount": {
                "type": "string",
                "defaultValue": "stoeacisdedfi1"
            },
            "BaseURL": {
                "type": "string",
                "defaultValue": "https://api.edgraph.dev"
            },
            "DbName": {
                "type": "string"
            },
            "FileSystem": {
                "type": "string"
            },
            "Schemas": {
                "type": "array"
            },
            "StageNum": {
                "type": "string"
            }
        },
        "variables": {
            "DescriptorList": {
                "type": "Array"
            },
            "AccessToken": {
                "type": "String"
            }
        },
        "folder": {
            "name": "EdFi/Single District Per Instance/Common"
        },
        "annotations": []
    }
}