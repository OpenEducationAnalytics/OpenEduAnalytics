{
	"name": "Upsert_Descriptors",
	"properties": {
		"folder": {
			"name": "EdFi"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "LS_datalake",
						"type": "LinkedServiceReference"
					},
					"name": "SourceJSON"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "LS_datalake",
						"type": "LinkedServiceReference"
					},
					"name": "SinkDELTA"
				}
			],
			"transformations": [
				{
					"name": "AlterRow"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "DerivedColumn"
				}
			],
			"scriptLines": [
				"parameters{",
				"     entity as string ('schools'),",
				"     directory as string ('EdFi'),",
				"     schoolYear as string ('2017'),",
				"     districtId as string ('255901'),",
				"     descriptorId as string",
				"}",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     enableCdc: true,",
				"     mode: 'read',",
				"     skipInitialLoad: false,",
				"     format: 'json',",
				"     fileSystem: 'stage1',",
				"     folderPath: (\"Landing/Transactional/{$directory}/v5.3/DistrictId={$districtId}/SchoolYear={$schoolYear}/{$entity}/Delta/\"),",
				"     documentForm: 'documentPerLine') ~> SourceJSON",
				"SelectColumns alterRow(upsertIf(true())) ~> AlterRow",
				"DerivedColumn select(mapColumn(",
				"          each(match(name!='DerivedColumn'&&name!=$descriptorId)),",
				"          each(match(name=='DerivedColumn'),",
				"               $descriptorId = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> SelectColumns",
				"SourceJSON derive(DerivedColumn = toShort(byName($descriptorId)),",
				"          LastModifiedDate = currentUTC()) ~> DerivedColumn",
				"AlterRow sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     fileSystem: 'stage2',",
				"     folderPath: (\"Standardized/Transactional/{$directory}/v5.3/General/DistrictId={$districtId}/SchoolYear={$schoolYear}/{$entity}\"),",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: true,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:false,",
				"     upsertable:true,",
				"     keys:['id'],",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1) ~> SinkDELTA"
			]
		}
	}
}